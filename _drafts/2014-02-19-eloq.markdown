---
layout: post
title: EloquentJavaScript JavaScript javascript javascript javascript javascript
categories: []
tags:
- JavaScript
status: publish
type: post
published: true
meta:
  _encloseme: '1'
author:
  login: vadimbrodsky
  email: vadim@vadimbrodsky.com
  display_name: Vadim
  first_name: Vadim
  last_name: Brodsky
---
<p>@EloquentJavaScript #JavaScript</p>
<p># Recluse Text Processing Example<br />
1. Split the file into paragraphs by cutting at every empty line.<br />
2. Remove the `%` characters from header paragraphs.<br />
3. Process the text of the paragraphs themselves, splitting them into normal parts, emphasized parts, and footnotes.<br />
4. Move all the footnotes to the bottom of the document, leaving numbers in their place.<br />
5. Wrap each piece into the correct HTML tags.<br />
6. Combine everything into a single HTML document.</p>
<p>## Step 1 - Splitting Paragraphs<br />
```javascript<br />
var paragraphs = RECLUSE.split("nn");<br />
paragraphs.length;      // 22<br />
```</p>
<p>## Step 2 - Finding Headers<br />
```javascript<br />
function processParagraph(paragraph) {<br />
    var header = 0;<br />
    while(paragraph.charAt(header) == '%')<br />
        header++;<br />
    if(header &gt; 0)<br />
        return {type: "h" + header, content: paragraph.slice(header +1)};<br />
    else<br />
        return {type: "p", content: paragraph};<br />
}</p>
<p>processParagraph(paragraphs[0]);    //  {type: "h1", content "The Book of Programming"}<br />
```</p>
<p>Using the Map Function<br />
```javascript<br />
map(processParagraph, RECLUSEFILE.split("nn"));<br />
```</p>
<p>## Step 3 - Emphasis and Footnotes<br />
1. If the paragraph starts with an asterik, take off the emphasized part and store it.<br />
2. If the paragraph starts with an opening brace, take off the footnote and store it.<br />
3. Otherwise, take off the part until the first emphasized part or footnote, or until the end of the string, and store it as normal text.<br />
4. If there is anything left in the paragraph, start at step 1 again.</p>
<p>```javascript<br />
function splitParagraph(text) {<br />
    function split(pos) {<br />
        if(pos == text.length) {<br />
            return [];<br />
        }<br />
        else if(text.charAt(pos) == "*") {<br />
            var end = findClosing("*", pos + 1);<br />
            var frag = {type: "emphasized", content: text.slice(pos+1, end)};<br />
            return [frag].concat(split(end + 1));<br />
        }<br />
        else if(text.charAt(pos) == "{") {<br />
            var end = findClosing("{", pos + 1);<br />
            var frag = {type: "footnote", content: text.slice(pos, end)};<br />
            return [frag].concat(split(end + 1));<br />
        } else {<br />
            var end = findOpeningOrEnd(pos);<br />
            var frag = {type: "normal", content: text.slice(pos, end)};<br />
            return [frag].concat(split(end));<br />
        }<br />
    }</p>
<p>    function findClosing(character, from) {<br />
    var end = text.indexOf(character, from);<br />
    if(end == -1)   // indexOf returns -1 when it does not find a substring<br />
        throw new Error ("Missing closing '" + character + "'" );<br />
    else<br />
        return end;<br />
    }</p>
<p>    function findOpeningOrEnd(from) {<br />
    function indexOrEnd(character) {<br />
        var index = text.indexOf(character, from);<br />
        return index == -1 ? text.length : index;<br />
    }<br />
    return Math.min(indexOrEnd("*"), indexOrEnd("{"));<br />
    }<br />
    return split(0);<br />
}<br />
```</p>
